name: CI - AniList Minimal Client

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build, Lint, Test, and Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-gi python3-gi-cairo gir1.2-gtk-3.0 libgtk-3-dev \
            libgirepository1.0-dev libcairo2-dev pkg-config
          sudo apt-get install -y libssl-dev libxml2-dev libxslt1-dev zlib1g-dev # Para dependencias extra

      - name: Upgrade pip and install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGObject pyinstaller
          pip install git+https://github.com/ReZeroE/AnilistPython.git
          pip install -r requirements.txt || true

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Format code with black (check only)
        run: |
          pip install black
          black --check .

      - name: Run unit tests (if any)
        run: |
          pip install pytest
          if [ -d "tests" ]; then pytest tests || exit 1; else echo "No tests directory"; fi

      - name: Security check (safety)
        run: |
          pip install safety
          safety check || true

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --name anilist-client --onefile main.py

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: anilist-client-linux
          path: dist/anilist-client

      - name: Show binary info
        run: |
          file dist/anilist-client
          ls -lh dist/anilist-client

  dependabot:
    name: Dependabot Auto-Approve and Merge
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Approve Dependabot PR
        uses: hmarr/auto-approve-action@v4
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Auto-merge Dependabot PR
        uses: pascalgn/automerge-action@v0.16.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
