name: Build CuteMusic Linux AppImage (ATL)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git build-essential meson ninja-build pkg-config \
            libasound2-dev libavcodec-dev libcap-dev libdrm-dev \
            libglib2.0-dev libgtk-4-dev libgudev-1.0-dev \
            libopenxr-dev libportal-dev libsqlite3-dev libwebkitgtk-6.0-dev \
            autoconf libtool unzip wget openjdk-17-jdk \
            libbsd-dev libunwind-dev libelf-dev \
            zlib1g-dev libssl-dev libcurl4-openssl-dev libxml2-dev \
            python3-pip cmake g++ default-jdk-headless \
            libsdl2-dev libx11-dev libxext-dev \
            libopus-dev libogg-dev libvorbis-dev libpng-dev libjpeg-dev \
            libsndfile1-dev

      - name: Build and install wolfSSL
        run: |
          git clone https://github.com/wolfSSL/wolfssl.git
          cd wolfssl
          git checkout v5.7.4-stable
          autoreconf -i
          ./configure --enable-shared --disable-opensslall --disable-opensslextra \
            --enable-aescbc-length-checks --enable-curve25519 --enable-ed25519 \
            --enable-ed25519-stream --enable-oldtls --enable-base64encode --enable-tlsx \
            --enable-scrypt --disable-examples --enable-crl --enable-jni
          make -j$(nproc)
          sudo make install
          cd ..

      - name: Build and install bionic_translation
        run: |
          git clone https://gitlab.com/android_translation_layer/bionic_translation.git
          cd bionic_translation
          meson setup builddir
          cd builddir
          meson compile -j $(nproc)
          sudo meson install
          cd ../..

      - name: Build and install art_standalone
        run: |
          git clone https://gitlab.com/android_translation_layer/art_standalone.git
          cd art_standalone
          make ____LIBDIR=lib -j$(nproc)
          sudo make ____LIBDIR=lib install
          cd ..
          sudo ldconfig

      - name: Symlink ART libraries for Meson
        run: |
          for lib in /usr/local/lib/art/libart*.so; do
            sudo ln -sf "$lib" /usr/local/lib/$(basename "$lib")
          done
          sudo ldconfig

      - name: Debug ART install
        run: |
          echo "Listing libart* in /usr/local/lib and /usr/local/lib/art"
          find /usr/local/lib -name "libart*"
          find /usr/local/lib/art -name "libart*"

      - name: Build and install libopensles-standalone
        run: |
          git clone https://gitlab.com/android_translation_layer/libopensles-standalone.git
          cd libopensles-standalone
          meson setup builddir
          cd builddir
          meson compile -j $(nproc)
          sudo meson install
          cd ../..

      - name: Build and install Android Translation Layer (ATL)
        env:
          LD_LIBRARY_PATH: "/usr/local/lib:$LD_LIBRARY_PATH"
          LIBRARY_PATH: "/usr/local/lib:$LIBRARY_PATH"
        run: |
          git clone https://gitlab.com/android_translation_layer/android_translation_layer.git
          cd android_translation_layer
          meson setup builddir
          cd builddir
          meson compile -j $(nproc)
          DESTDIR=$GITHUB_WORKSPACE/atl-out meson install
          cd ../..

      - name: Build CuteMusic APK
        run: |
          git clone https://github.com/sosauce/CuteMusic.git
          cd CuteMusic
          ./gradlew assembleRelease
          cd ..

      - name: Prepare AppDir bundle
        run: |
          mkdir -p AppDir/atl
          cp -r atl-out/usr/* AppDir/atl/
          cp CuteMusic/app/build/outputs/apk/release/app-release.apk AppDir/
          echo '#!/bin/bash
          DIR="$(dirname "$(readlink -f "$0")")"
          exec "$DIR/atl/bin/atl" "$DIR/app-release.apk"
          ' > AppDir/AppRun
          chmod +x AppDir/AppRun
          if [ -f CuteMusic/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png ]; then
            cp CuteMusic/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png AppDir/
          fi

      - name: Build AppImage
        run: |
          wget -q "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage AppDir

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: CuteMusic-Linux-ATL-AppImage
          path: "*.AppImage"
