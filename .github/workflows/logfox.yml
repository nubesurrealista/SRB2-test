---
name: LogFox Release APK (Signed, Linux)
on:
  workflow_dispatch: null
env:
  KEY_STORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
  ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout LogFox code
        uses: actions/checkout@v4
        with:
          repository: F0x1d/LogFox
          path: LogFox
      - name: Decode keystore into app dir
        run: >
          echo "${{ secrets.RELEASE_KEYSTORE_B64 }}" | base64 -d >
          LogFox/app/nube.jks
      - name: Create release signing properties in app dir
        run: |
          cat <<EOF > LogFox/app/release-signing.properties
          storeFile=nube.jks
          storePassword=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.RELEASE_KEY_ALIAS }}
          keyPassword=${{ secrets.RELEASE_KEY_PASSWORD }}
          EOF
      - name: Ensure Gradle Wrapper is executable
        run: chmod +x ./LogFox/gradlew
      - name: Inject signing config (only inside android block, Kotlin DSL)
        run: >
          FILE="LogFox/app/build.gradle.kts"

          TMPFILE="LogFox/app/build.gradle.kts.tmp"

          # Add imports if missing

          grep -q 'import java.util.Properties' "$FILE" || sed -i '1iimport java.util.Properties' "$FILE"

          grep -q 'import java.io.FileInputStream' "$FILE" || sed -i '1iimport java.io.FileInputStream' "$FILE"


          # Check if signingConfigs already present

          if ! grep -q 'signingConfigs' "$FILE"; then
            awk '
              BEGIN { in_android = 0 }
              /android[[:space:]]*\{/ { 
                in_android = 1
                print
                print ""
                print "    val keystorePropertiesFile = file(\"release-signing.properties\")"
                print "    val keystoreProperties = Properties()"
                print "    if (keystorePropertiesFile.exists()) {"
                print "        keystoreProperties.load(FileInputStream(keystorePropertiesFile))"
                print "    }"
                print "    signingConfigs {"
                print "        create(\"release\") {"
                print "            storeFile = file(keystoreProperties[\"storeFile\"]?.toString()!!)"
                print "            storePassword = keystoreProperties[\"storePassword\"]?.toString()!!"
                print "            keyAlias = keystoreProperties[\"keyAlias\"]?.toString()!!"
                print "            keyPassword = keystoreProperties[\"keyPassword\"]?.toString()!!"
                print "        }"
                print "    }"
                next
              }
              { print }
            ' "$FILE" > "$TMPFILE" && mv "$TMPFILE" "$FILE"
          fi


          # Only add buildTypes.release signingConfig if missing

          if ! grep -q 'signingConfig = signingConfigs.getByName("release")' "$FILE"; then
            awk '
              BEGIN { in_android = 0; in_buildtypes = 0 }
              /android[[:space:]]*\{/ { in_android = 1 }
              in_android && /buildTypes[[:space:]]*\{/ { in_buildtypes = 1 }
              in_buildtypes && /getByName\("release"\)[[:space:]]*\{/ {
                print
                print "            signingConfig = signingConfigs.getByName(\"release\")"
                next
              }
              /\}/ {
                if (in_buildtypes) in_buildtypes = 0
                else if (in_android) in_android = 0
              }
              { print }
            ' "$FILE" > "$TMPFILE" && mv "$TMPFILE" "$FILE"
          fi
      - name: Show gradle and properties for debug (extract)
        run: >
          echo "======= Extract of build.gradle.kts (android block) ======="

          sed -n '/android[[:space:]]*{/,/^}/p' LogFox/app/build.gradle.kts | head -60

          echo "======= release-signing.properties ======="

          cat LogFox/app/release-signing.properties | sed 's/=.*/=***hidden***/'
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
      - name: Build APK
        run: |
          cd LogFox
          ./gradlew assembleRelease --stacktrace --no-daemon
      - name: List APKs generated
        run: find LogFox -type f -name "*.apk"
      - name: Upload any APK generated
        uses: actions/upload-artifact@v4
        with:
          name: logfox-apks
          path: |
            LogFox/**/*.apk
