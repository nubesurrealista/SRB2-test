name: Build & Sign Mihon 32bits APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Clona Mihon
      - name: Clone Mihon source
        run: |
          git clone --depth 1 https://github.com/mihonapp/mihon.git

      # Configura identidad de Git para cherry-pick
      - name: Set up git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Cherry-pick de los commits de Kahon
      - name: Cherry-pick from Kahon
        run: |
          cd mihon
          git remote add kahon https://github.com/AmanoTeam/Kahon.git
          git fetch kahon
          git cherry-pick 16580dadfdff3a4ed20b57b2f03c4f90f715d983
          git cherry-pick c56212ddfb67427bea6758d3963e863a5c2d0a8f

      # Configura JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Decodifica el keystore
      - name: Decode keystore into app dir
        run: |
          cd mihon
          echo "${{ secrets.RELEASE_KEYSTORE_B64 }}" | base64 -d > app/nube.jks

      # Compila solo la APK 32 bits (armeabi-v7a)
      - name: Build unsigned 32bits APK
        run: |
          cd mihon
          ./gradlew assembleArmeabiV7aRelease --stacktrace

      # Busca y firma la APK
      - name: Sign APK using apksigner
        run: |
          cd mihon
          APK_PATH=$(find app/build/outputs/apk/armeabi-v7a/release -name "*.apk" | head -n 1)
          if [ ! -f "$APK_PATH" ]; then
            echo "No se encontr√≥ el APK unsigned armeabi-v7a release"
            exit 1
          fi
          echo "APK unsigned encontrado en: $APK_PATH"
          "$ANDROID_HOME/build-tools/$(ls $ANDROID_HOME/build-tools | sort -V | tail -n1)/apksigner" sign \
            --ks app/nube.jks \
            --ks-key-alias "${{ secrets.RELEASE_KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
            --key-pass pass:"${{ secrets.RELEASE_KEY_PASSWORD }}" \
            --out app-release-signed.apk \
            "$APK_PATH"

      # Lista la APK firmada
      - name: List APKs (signed)
        run: |
          cd mihon
          ls -lh app-release-signed.apk

      # Sube la APK firmada como artefacto
      - name: Upload signed APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: mihon-32bits-apk
          path: mihon/app-release-signed.apk
          if-no-files-found: error