---
name: Build Trackma Debian Package (Latest)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: null
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: >
          sudo apt-get update

          sudo apt-get install -y debhelper dh-python python3-all python3-poetry-core git dpkg-sig gnupg2
      - name: Clone latest code
        run: >
          git clone https://github.com/z411/trackma.git trackma-source

          cd trackma-source

          VERSION=$(grep -m1 version pyproject.toml | cut -d'"' -f2 || echo "0.9")

          echo "VERSION=$VERSION" >> $GITHUB_ENV

          cd ..

          tar -czf trackma_${VERSION}.orig.tar.gz trackma-source
      - name: Configure GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: >
          mkdir -p ~/.gnupg

          chmod 700 ~/.gnupg

          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

          echo "$GPG_PRIVATE_KEY" | gpg --batch --import

          KEYID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec:/ {print $5}')

          echo "KEYID=$KEYID" >> $GITHUB_ENV
      - name: Configure debian directory
        run: >
          cd trackma-source

          mkdir -p debian

          echo "Source: trackma" > debian/control

          echo "Section: python" >> debian/control

          echo "Priority: optional" >> debian/control

          echo "Maintainer: Nube <nubesurrealista@proton.me>" >> debian/control

          echo "Build-Depends: debhelper-compat (= 13), dh-python, python3-all, python3-poetry-core, git" >> debian/control

          echo "Standards-Version: 4.5.0" >> debian/control

          echo "" >> debian/control

          echo "Package: python3-trackma" >> debian/control

          echo "Architecture: all" >> debian/control

          echo "Depends: \${python3:Depends}, python3-gi, python3-cairo, python3-pil" >> debian/control

          echo "Description: Gestor de listas multi-sitio para sistemas Unix" >> debian/control


          echo "trackma (${VERSION}-1) unstable; urgency=medium" > debian/changelog

          echo "" >> debian/changelog

          echo "  * Latest build from main branch" >> debian/changelog

          echo "" >> debian/changelog

          echo " -- Nube <nubesurrealista@proton.me>  $(date -R)" >> debian/changelog


          echo "#!/usr/bin/make -f" > debian/rules

          echo "%:" >> debian/rules

          echo "	dh \$@ --with python3" >> debian/rules

          chmod +x debian/rules
      - name: Build Debian package
        run: |
          cd trackma-source
          dpkg-buildpackage -us -uc
          echo "Verifying generated .deb file:"
          ls -la ../*.deb
          echo "Package content:"
          dpkg -c ../*.deb || true
      - name: Sign Debian package
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          KEYID: ${{ env.KEYID }}
        run: >
          cd trackma-source

          DEB_FILE=$(find .. -maxdepth 1 -name "*.deb" -print -quit)


          if [ -z "$DEB_FILE" ]; then
            echo "::error::No .deb file found in parent directory!"
            echo "Current directory: $(pwd)"
            echo "Directory contents:"
            ls -la ..
            exit 1
          fi


          echo "Found package at: $DEB_FILE"

          echo "Signing with key $KEYID..."

          echo "$GPG_PASSPHRASE" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --output "${DEB_FILE}.sig" --detach-sig "$DEB_FILE"

          dpkg-sig --sign builder -k "$KEYID" "$DEB_FILE"

          echo "Verifying signature:"

          gpg --verify "${DEB_FILE}.sig" "$DEB_FILE"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: trackma-deb
          path: |
            ../*.deb
            ../*.deb.sig