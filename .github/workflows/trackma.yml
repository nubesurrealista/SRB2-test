---
name: Build Trackma Debian Package (Latest)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: null
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: >
          sudo apt-get update

          sudo apt-get install -y debhelper dh-python python3-all python3-poetry-core git dpkg-sig gnupg2
      - name: Clone latest code
        run: >
          git clone https://github.com/z411/trackma.git trackma-source

          cd trackma-source

          VERSION=$(grep -m1 version pyproject.toml | cut -d'"' -f2 || echo "0.9")

          echo "VERSION=$VERSION" >> $GITHUB_ENV

          cd ..

          tar -czf trackma_${VERSION}.orig.tar.gz trackma-source
      - name: Configure GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: >
          mkdir -p ~/.gnupg

          chmod 700 ~/.gnupg

          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

          echo "$GPG_PRIVATE_KEY" | gpg --batch --import

          KEYID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec:/ {print $5}')

          echo "KEYID=$KEYID" >> $GITHUB_ENV

          echo "Imported key:"

          gpg --list-secret-keys --keyid-format LONG
      - name: Configure debian directory
        run: |
          cd trackma-source
          mkdir -p debian
          # [Resto de la configuraciÃ³n permanece igual...]
      - name: Build Debian package
        run: |
          cd trackma-source
          dpkg-buildpackage -us -uc
          echo "Build artifacts:"
          find .. -name "*.deb" -exec echo {} \;
      - name: Sign Debian package
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          KEYID: ${{ env.KEYID }}
        run: >
          DEB_FILE=$(find .. -name "*.deb" -print -quit)

          echo "Signing package: $DEB_FILE"

          echo "$GPG_PASSPHRASE" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --output "${DEB_FILE}.sig" --detach-sig "$DEB_FILE"

          dpkg-sig --sign builder -k "$KEYID" "$DEB_FILE"

          echo "Verifying signature:"

          gpg --verify "${DEB_FILE}.sig" "$DEB_FILE"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: trackma-deb
          path: |
            ../*.deb
            ../*.deb.sig
