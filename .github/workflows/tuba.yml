name: Build Tuba AppImage (Arch, sin linuxdeploy)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build AppDir in Arch Linux Docker (SVG to PNG conversion)
        run: |
          set -euxo pipefail
          docker run --rm -v "$PWD:/workspace" -w /workspace archlinux:latest bash -c "
            pacman -Syu --noconfirm
            pacman -S --noconfirm base-devel git meson ninja vala \
              gtk4 libadwaita libsoup3 libsecret gtksourceview5 icu \
              json-glib glib2 libxml2 gobject-introspection wget patchelf \
              hicolor-icon-theme desktop-file-utils libgee librsvg

            # Construcción de Tuba
            git clone --depth=1 https://github.com/GeopJr/Tuba.git tuba-src
            cd tuba-src
            meson setup build
            meson compile -C build
            DESTDIR=/workspace/AppDir meson install -C build
            cd /workspace

            mkdir -p AppDir/usr/lib AppDir/usr/bin

            EXEC=tuba

            # Copiar dependencias necesarias
            ldd AppDir/usr/bin/$EXEC | awk '{if (\$3 ~ /^\\//) print \$3}' | while read -r lib; do
              [ -f \"$lib\" ] && cp -n \"$lib\" AppDir/usr/lib/ || true
            done

            # Copiar SVG y convertir a PNG
            cp dev.geopjr.Tuba.svg AppDir/
            rsvg-convert -w 256 -h 256 AppDir/dev.geopjr.Tuba.svg -o AppDir/dev.geopjr.Tuba.png

            # Verificar PNG
            if ! file AppDir/dev.geopjr.Tuba.png | grep -q 'PNG image data'; then
              echo 'ERROR: El icono PNG no es válido'
              exit 1
            fi

            # Crear archivo .desktop
            echo '[Desktop Entry]' > AppDir/dev.geopjr.Tuba.desktop
            echo 'Type=Application' >> AppDir/dev.geopjr.Tuba.desktop
            echo 'Name=Tuba' >> AppDir/dev.geopjr.Tuba.desktop
            echo 'Exec=tuba' >> AppDir/dev.geopjr.Tuba.desktop
            echo 'Icon=dev.geopjr.Tuba' >> AppDir/dev.geopjr.Tuba.desktop
            echo 'Categories=Network;' >> AppDir/dev.geopjr.Tuba.desktop
            echo 'Comment=Browse the Fediverse' >> AppDir/dev.geopjr.Tuba.desktop
            echo 'Terminal=false' >> AppDir/dev.geopjr.Tuba.desktop

            # Crear AppRun
            echo '#!/bin/sh' > AppDir/AppRun
            echo 'HERE=\"\$(dirname \"\$(readlink -f \"\$0\")\")\"' >> AppDir/AppRun
            echo 'export LD_LIBRARY_PATH=\"\$HERE/usr/lib:\$LD_LIBRARY_PATH\"' >> AppDir/AppRun
            echo 'exec \"\$HERE/usr/bin/\$EXEC\" \"\$@\"' >> AppDir/AppRun
            chmod +x AppDir/AppRun

            # Debug archivos críticos
            ls -l AppDir/
            cat AppDir/dev.geopjr.Tuba.desktop
            file AppDir/dev.geopjr.Tuba.png
          "

      - name: Instalar FUSE para AppImage
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2

      - name: Descargar appimagetool
        run: |
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

      - name: Eliminar .DirIcon antes de empaquetar (por precaución)
        run: |
          rm -f AppDir/.DirIcon || true

      - name: Construir AppImage
        run: |
          ./appimagetool AppDir

      - name: Subir AppImage como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: tuba-appimage
          path: ./*.AppImage
