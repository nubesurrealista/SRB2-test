name: Build Tuba AppImage (Arch, sin linuxdeploy)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build AppDir in Arch Linux Docker (with SVG to PNG conversion)
        run: |
          set -euxo pipefail
          docker run --rm -v "$PWD:/workspace" -w /workspace archlinux:latest bash -c '
            pacman -Syu --noconfirm
            pacman -S --noconfirm base-devel git meson ninja vala \
              gtk4 libadwaita libsoup3 libsecret gtksourceview5 icu \
              json-glib glib2 libxml2 gobject-introspection wget patchelf \
              hicolor-icon-theme desktop-file-utils libgee librsvg

            git clone --depth=1 https://github.com/GeopJr/Tuba.git tuba-src
            cd tuba-src
            meson setup build
            meson compile -C build
            DESTDIR=/workspace/AppDir meson install -C build
            cd /workspace

            mkdir -p AppDir/usr/lib AppDir/usr/bin

            EXEC=tuba

            ldd AppDir/usr/bin/$EXEC | awk '"'"'{if ($3 ~ /^\\//) print $3}'"'"' | while read -r lib; do
              [ -f "$lib" ] && cp -n "$lib" AppDir/usr/lib/ || true
            done

            # Copia SVG al AppDir
            cp dev.geopjr.Tuba.svg AppDir/

            # Convierte SVG a PNG (AppImage requiere PNG)
            rsvg-convert -w 256 -h 256 AppDir/dev.geopjr.Tuba.svg -o AppDir/dev.geopjr.Tuba.png

            # Verifica que el PNG existe y es válido
            file AppDir/dev.geopjr.Tuba.png | grep "PNG image data" || (echo "ERROR: Icono PNG no válido" && exit 1)

            # Archivo .desktop correcto
            cat > AppDir/dev.geopjr.Tuba.desktop <<EOF
[Desktop Entry]
Type=Application
Name=Tuba
Exec=tuba
Icon=dev.geopjr.Tuba
Categories=Network;
Comment=Browse the Fediverse
Terminal=false
EOF

            # AppRun simple
            cat > AppDir/AppRun <<EOF
#!/bin/sh
HERE="\$(dirname "\$(readlink -f "\$0")")"
export LD_LIBRARY_PATH="\$HERE/usr/lib:\$LD_LIBRARY_PATH"
exec "\$HERE/usr/bin/\$EXEC" "\$@"
EOF
            chmod +x AppDir/AppRun
          '

      - name: Instalar FUSE para AppImage
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2

      - name: Descargar appimagetool
        run: |
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

      - name: Eliminar .DirIcon antes de empaquetar (por precaución)
        run: |
          rm -f AppDir/.DirIcon || true

      - name: Debug .desktop y icono (puedes quitar este paso si todo va bien)
        run: |
          cat AppDir/dev.geopjr.Tuba.desktop
          file AppDir/dev.geopjr.Tuba.png
          ls -lh AppDir/

      - name: Construir AppImage
        run: |
          ./appimagetool AppDir

      - name: Subir AppImage como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: tuba-appimage
          path: ./*.AppImage
